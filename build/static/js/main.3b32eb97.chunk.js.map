{"version":3,"sources":["components/MyMap.js","App.js","index.js"],"names":["MyMap","state","lat","lng","zoom","this","props","remoteData","MapContainer","center","style","width","height","TileLayer","attribution","url","map","feature","point","label","Marker","position","Popup","React","Component","App","fetch","method","mode","catch","err","console","log","res","json","geojson","setState","ReactDOM","render","document","getElementById"],"mappings":"kQA4CeA,E,4MAjCXC,MAAQ,CACJC,IAAK,MACLC,IAAK,OACLC,KAAM,I,uDAIN,OACIC,KAAKC,MAAMC,WACP,eAACC,EAAA,EAAD,CAAcC,QAAQJ,KAAKJ,MAAMC,IAAKG,KAAKJ,MAAME,KAAKC,KAAMC,KAAKJ,MAAMG,KAAMM,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAA5G,UACI,cAACC,EAAA,EAAD,CAAWC,YAAY,8DAA8DC,IAAI,uDAErFV,KAAKC,MAAMC,WAAX,SAAkCS,KAAI,SAAAC,GAClC,IAAMC,EAAQD,EAAO,SAAP,YACRE,EAAQF,EAAO,WAAP,MAEd,OACI,cAACG,EAAA,EAAD,CAAQC,SAAUH,EAAlB,SACI,eAACI,EAAA,EAAD,WACI,0CAAaH,KACb,8CAAiBD,EAAM,MACvB,+CAAkBA,EAAM,cAZhD,OAmBF,oD,GA7BMK,IAAMC,WCgBXC,E,4MApBXxB,MAAQ,CACJM,WAAY,I,oMAIMmB,MAAM,0BAA2B,CAACC,OAAQ,MAAOC,KAAK,SAASC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,M,cAApGG,E,gBACgBA,EAAIC,O,OAApBC,E,OACNJ,QAAQC,IAAIG,GACZ9B,KAAK+B,SAAS,CACV7B,WAAY4B,I,qIAKhB,OACI,cAAC,EAAD,CAAO5B,WAAYF,KAAKJ,MAAMM,iB,GAhBxBgB,IAAMC,WCExBa,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.3b32eb97.chunk.js","sourcesContent":["/* MyMap.js */\n\nimport React from \"react\";\nimport {\n    MapContainer,\n    TileLayer,\n    Marker,\n    Popup\n} from \"react-leaflet\";\n\nclass MyMap extends React.Component {\n    state = {\n        lat: 35.61,\n        lng: 139.61,\n        zoom: 13\n    }\n\n    render() {\n        return(\n            this.props.remoteData ?\n                <MapContainer center={this.state.lat, this.state.lng} zoom={this.state.zoom} style={{width: \"100%\", height: \"900px\"}}>\n                    <TileLayer attribution='&Copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>' url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n                    {\n                        this.props.remoteData[\"features\"].map(feature => {\n                            const point = feature[\"geometry\"][\"coordinates\"];\n                            const label = feature[\"properties\"][\"title\"];\n\n                            return (\n                                <Marker position={point}>\n                                    <Popup>\n                                        <span>Name: {label}</span>\n                                        <span>Latitude: {point[0]}</span>\n                                        <span>Longitude: {point[1]}</span>\n                                    </Popup>\n                                </Marker>\n                            );\n                        })\n                    };\n                </MapContainer>\n            : <p>Data Loading...</p>\n        );\n    }\n}\n\nexport default MyMap;","/* App.js */\n\nimport React from \"react\";\nimport MyMap from \"./components/MyMap.js\";\n\nclass App extends React.Component {\n    state = {\n        remoteData: []\n    }\n\n    async componentDidMount() {\n        const res = await fetch(\"./yamanote_line.geojson\", {method: \"GET\", mode:\"cors\"}).catch(err => console.log(err));\n        const geojson = await res.json();\n        console.log(geojson);\n        this.setState({\n            remoteData: geojson\n        });\n    }\n\n    render() {\n        return(\n            <MyMap remoteData={this.state.remoteData}/>\n        );\n    }\n}\n\nexport default App;","/* index.js */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App.js\";\n\nReactDOM.render(\n    <App/>,\n    document.getElementById(\"app\")\n);"],"sourceRoot":""}